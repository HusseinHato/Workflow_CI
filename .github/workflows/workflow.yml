name: workflow-ci

on:
    push:
      branches:
        - master
    pull_request:
      branches:
        - master

env:
    CSV_URL: "MLProject/croprecommendation_preprocessing.csv"
    TARGET_VAR: "label"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.12.9'
            - name: Check Env
              run: |
                echo $CSV_URL
                echo $TARGET_VAR
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install mlflow
            - name: Run as a MLflow
              run: |
                mlflow run MLProject --env-manager=local
            - name: set up git lfs
              run: |
                git config --global user.name "${{ secrets.USERNAME }}"
                git config --global user.email "${{ secrets.EMAIL }}"
                git lfs install
                git lfs track "mlruns/**"
                git add .gitattributes
                git commit -m "Track large files in mlruns with Git LFS" || true
                git push origin master
            - name: save mlruns to repo
              run: |
                git config --global user.name "${{ secrets.USERNAME }}"
                git config --global user.email "${{ secrets.EMAIL }}"
                git add -f mlruns/
                git commit -m "Save mlruns from CI run" || true
                git push origin master
            - name: get latest mlflow run_id
              run: |
                RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
                echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
                echo "Latest run_id: $RUN_ID"
            - name: build docker model
              run: |
                mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "croprecommendation" -p 5000
            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                username: "${{ secrets.DOCKER_USERNAME }}"
                password: "${{ secrets.DOCKER_TOKEN }}"
            - name: Tag Docker Image
              run: |
                docker tag croprecommendation "${{ secrets.DOCKER_USERNAME }}/croprecommendation:latest"
            - name: Push Docker Image
              run: |
                docker push "${{ secrets.DOCKER_USERNAME }}/croprecommendation:latest"


